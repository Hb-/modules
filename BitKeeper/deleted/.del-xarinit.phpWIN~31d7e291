<?php
/**
 * File: $Id:
 */
function netquery_init()
{
    $dbconn =& xarDBGetConn();
    $xartable =& xarDBGetTables();
    $WhoisTable = $xartable['netquery_whois'];
    $ExecTable = $xartable['netquery_exec'];
    $LGRequestTable = $xartable['netquery_lgrequest'];
    $LGRouterTable = $xartable['netquery_lgrouter'];
    xarDBLoadTableMaintenanceAPI();
    $execfields = array(
         'exec_id'       => array('type'=>'integer','size'=>'medium','null'=>FALSE,'increment'=>TRUE,'primary_key'=>TRUE)
        ,'exec_type'     => array('type'=>'varchar','size'=>10,'null'=>FALSE,'default'=>'')
        ,'exec_local'    => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>'')
        ,'exec_winsys'   => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
        ,'exec_remote'   => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>'')
        ,'exec_remote_t' => array('type'=>'varchar','size'=>10,'null'=>FALSE,'default'=>''));
    $query = xarDBCreateTable($ExecTable,$execfields);
    if (empty($query)) return;
    $result =& $dbconn->Execute($query);
    if ($dbconn->ErrorNo() != 0) {
        $msg = xarML('DATABASE_ERROR', $sql);
         xarErrorSet(XAR_SYSTEM_EXCEPTION, 'DATABASE_ERROR',
                       new SystemException(__FILE__.'('.__LINE__.'): '.$msg));
        return;
    }
    $whoisfields = array(
         'whois_id'     => array('type'=>'integer','size'=>'medium','null'=>FALSE,'increment'=>TRUE,'primary_key'=>TRUE)
        ,'whois_ext'    => array('type'=>'varchar','size'=>10,'null'=>FALSE,'default'=>'')
        ,'whois_server' => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>''));
    $query = xarDBCreateTable($WhoisTable,$whoisfields);
    if (empty($query)) return;
    $result =& $dbconn->Execute($query);
    if ($dbconn->ErrorNo() != 0) {
        $msg = xarML('DATABASE_ERROR', $sql);
         xarErrorSet(XAR_SYSTEM_EXCEPTION, 'DATABASE_ERROR',
                       new SystemException(__FILE__.'('.__LINE__.'): '.$msg));
        return;
    }
    $lgrequestfields = array(
            'request_id' => array('type'=>'integer','size'=>'medium','null'=>FALSE,'increment'=>TRUE,'primary_key'=>TRUE)
           ,'request'    => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>'')
           ,'command'    => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>'')
           ,'handler'    => array('type'=>'varchar','size'=>10,'null'=>FALSE,'default'=>'')
           ,'argc'       => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0'));
    $query = xarDBCreateTable($LGRequestTable,$lgrequestfields);
    if (empty($query)) return;
    $result =& $dbconn->Execute($query);
    if ($dbconn->ErrorNo() != 0) {
        $msg = xarML('DATABASE_ERROR', $sql);
         xarErrorSet(XAR_SYSTEM_EXCEPTION, 'DATABASE_ERROR',
                       new SystemException(__FILE__.'('.__LINE__.'): '.$msg));
        return;
    }
    $lgrouterfields = array(
             'router_id'       => array('type'=>'integer','size'=>'medium','null'=>FALSE,'increment'=>TRUE,'primary_key'=>TRUE)
            ,'router'          => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>'')
            ,'address'         => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>'')
            ,'username'        => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
            ,'password'        => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
            ,'zebra'           => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
            ,'zebra_port'      => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
            ,'zebra_password'  => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
            ,'ripd'            => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
            ,'ripd_port'       => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
            ,'ripd_password'   => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
            ,'ripngd'          => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
            ,'ripngd_port'     => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
            ,'ripngd_password' => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
            ,'ospfd'           => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
            ,'ospfd_port'      => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
            ,'ospfd_password'  => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
            ,'bgpd'            => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
            ,'bgpd_port'       => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
            ,'bgpd_password'   => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
            ,'ospf6d'          => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
            ,'ospf6d_port'     => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
            ,'ospf6d_password' => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
            ,'use_argc'        => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0'));
    $query = xarDBCreateTable($LGRouterTable,$lgrouterfields);
    if (empty($query)) return;
    $result =& $dbconn->Execute($query);
    if ($dbconn->ErrorNo() != 0) {
        $msg = xarML('DATABASE_ERROR', $sql);
         xarErrorSet(XAR_SYSTEM_EXCEPTION, 'DATABASE_ERROR',
                       new SystemException(__FILE__.'('.__LINE__.'): '.$msg));
        return;
    }
    $id = $dbconn->GenId($ExecTable);
    $query = "INSERT INTO $ExecTable (exec_id, exec_type, exec_local, exec_winsys, exec_remote, exec_remote_t) VALUES ($id, 'ping', 'ping.exe', '1', 'http://noc.thunderworx.net/cgi-bin/public/ping.pl', 'target');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($ExecTable);
    $query = "INSERT INTO $ExecTable (exec_id, exec_type, exec_local, exec_winsys, exec_remote, exec_remote_t) VALUES ($id, 'trace', 'tracert.exe', '1', 'http://noc.thunderworx.net/cgi-bin/public/traceroute.pl', 'target');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($ExecTable);
    $query = "INSERT INTO $ExecTable (exec_id, exec_type, exec_local, exec_winsys, exec_remote, exec_remote_t) VALUES ($id, 'log', 'var/logs/netquery.log', '1', 'Y-m-d H:i:s', 'log');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.com', 'whois.crsnic.net');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.net', 'whois.crsnic.net');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.edu', 'whois.crsnic.net');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.org', 'whois.publicinterestregistry.net');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.ca', 'whois.cira.ca');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.co.uk', 'whois.nic.uk');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.org.uk', 'whois.nic.uk');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.us', 'whois.nic.us');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.biz', 'whois.neulevel.biz');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.info', 'whois.afilias.info');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.ws', 'whois.website.ws');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.name', 'whois.nic.name');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.cc', 'whois.nic.cc');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.cn', 'whois.cnnic.cn');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.com.cn', 'whois.cnnic.cn');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.net.cn', 'whois.cnnic.cn');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.org.cn', 'whois.cnnic.cn');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.tm', 'whois.nic.tm');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($WhoisTable);
    $query = "INSERT INTO $WhoisTable (whois_id, whois_ext, whois_server) VALUES ($id, '.nl', 'whois.domain-registry.nl');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv4 BGP neighborship', 'show ip bgp summary', 'bgpd', '0');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv4 BGP RR to...', 'show ip bgp', 'bgpd', '1');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv4 OSPF neighborship', 'show ip ospf neighbor', 'ospfd', '0');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv4 OSPF RT', 'show ip ospf route', 'ospfd', '0');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv4 any RR to...', 'show ip route', 'zebra', '1');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'Interface info on...', 'show interface', 'zebra', '1');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv6 BGP neighborship', 'show ipv6 bgp summary', 'ripngd', '0');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv6 BGP route to...', 'show ipv6 bgp', 'ripngd', '1');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv6 OSPF neighborship', 'show ipv6 ospf neighbor', 'ospf6d', '0');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv6 OSPF RT', 'show ipv6 ospf route', 'ospf6d', '0');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRequestTable);
    $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv6 any route to...', 'show ipv6 route', 'zebra', '1');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRouterTable);
    $query = "INSERT INTO $LGRouterTable (router_id, router, address, username, password, zebra, zebra_port, zebra_password, ripd, ripd_port, ripd_password, ripngd, ripngd_port, ripngd_password, ospfd, ospfd_port, ospfd_password, bgpd, bgpd_port, bgpd_password, ospf6d, ospf6d_port, ospf6d_password, use_argc) VALUES ($id, 'default', '127.0.0.1', '', '', '1', '2601', '', '1', '2602', '', '1', '2603', '', '1', '2604', '', '1', '2605', '', '1', '2606', '', '1');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRouterTable);
    $query = "INSERT INTO $LGRouterTable (router_id, router, address, username, password, zebra, zebra_port, zebra_password, ripd, ripd_port, ripd_password, ripngd, ripngd_port, ripngd_password, ospfd, ospfd_port, ospfd_password, bgpd, bgpd_port, bgpd_password, ospf6d, ospf6d_port, ospf6d_password, use_argc) VALUES ($id, 'ATT Public', 'route-server.ip.att.net', '', '', '1', '23', '', '0', '0', '', '0', '0', '', '1', '23', '', '1', '23', '', '0', '0', '', '1');";
    $result =& $dbconn->Execute($query);
    $id = $dbconn->GenId($LGRouterTable);
    $query = "INSERT INTO $LGRouterTable (router_id, router, address, username, password, zebra, zebra_port, zebra_password, ripd, ripd_port, ripd_password, ripngd, ripngd_port, ripngd_password, ospfd, ospfd_port, ospfd_password, bgpd, bgpd_port, bgpd_password, ospf6d, ospf6d_port, ospf6d_password, use_argc) VALUES ($id, 'Oregon-ix', 'route-views.oregon-ix.net', 'rviews', '', '1', '23', '', '0', '0', '', '0', '0', '', '1', '23', '', '1', '23', '', '0', '0', '', '1');";
    $result =& $dbconn->Execute($query);
    if ($dbconn->ErrorNo() != 0) {
        $msg = xarML('DATABASE_ERROR', $sql);
         xarErrorSet(XAR_SYSTEM_EXCEPTION, 'DATABASE_ERROR',
                       new SystemException(__FILE__.'('.__LINE__.'): '.$msg));
        return;
    }
    xarModSetVar('netquery', 'capture_log_enabled', 0);
    xarModSetVar('netquery', 'whois_enabled', 1);
    xarModSetVar('netquery', 'whoisip_enabled', 1);
    xarModSetVar('netquery', 'dns_lookup_enabled', 1);
    xarModSetVar('netquery', 'dns_dig_enabled', 1);
    xarModSetVar('netquery', 'port_check_enabled', 1);
    xarModSetVar('netquery', 'http_req_enabled', 1);
    xarModSetVar('netquery', 'ping_enabled', 1);
    xarModSetVar('netquery', 'ping_remote_enabled', 1);
    xarModSetVar('netquery', 'trace_enabled', 1);
    xarModSetVar('netquery', 'trace_remote_enabled', 1);
    xarModSetVar('netquery', 'looking_glass_enabled', 1);
    xarRegisterMask('OverviewNetquery','All','netquery','All','All','ACCESS_READ');
    xarRegisterMask('ReadNetquery','All','netquery','All','All','ACCESS_READ');
    xarRegisterMask('EditNetquery','All','netquery','All','All','ACCESS_EDIT');
    xarRegisterMask('AddNetquery','All','netquery','All','All','ACCESS_ADD');
    xarRegisterMask('DeleteNetquery','All','netquery','All','All','ACCESS_DELETE');
    xarRegisterMask('AdminNetquery','All','netquery','All','All','ACCESS_ADMIN');
    return true;
}
function netquery_upgrade($oldversion)
{
    switch ($oldversion) {
        case '1.0.0':
            xarModSetVar('netquery', 'http_req_enabled', 1);
            xarModSetVar('netquery', 'looking_glass_enabled', 1);
            $dbconn =& xarDBGetConn();
            $xartable =& xarDBGetTables();
            $ExecTable = $xartable['netquery_exec'];
            $LGRequestTable = $xartable['netquery_lgrequest'];
            $LGRouterTable = $xartable['netquery_lgrouter'];
            xarDBLoadTableMaintenanceAPI();
            $query = "UPDATE $ExecTable  SET exec_remote = 'Y-m-d H:i:s' WHERE exec_type = 'log'";
            $result =& $dbconn->Execute($query);
            $lgrequestfields = array(
                   'request_id' => array('type'=>'integer','size'=>'medium','null'=>FALSE,'increment'=>TRUE,'primary_key'=>TRUE)
                  ,'request'    => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>'')
                  ,'command'    => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>'')
                  ,'handler'    => array('type'=>'varchar','size'=>10,'null'=>FALSE,'default'=>'')
                  ,'argc'       => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0'));
            $query = xarDBCreateTable($LGRequestTable,$lgrequestfields);
            if (empty($query)) return;
            $result =& $dbconn->Execute($query);
            if ($dbconn->ErrorNo() != 0) {
                $msg = xarML('DATABASE_ERROR', $sql);
                 xarErrorSet(XAR_SYSTEM_EXCEPTION, 'DATABASE_ERROR',
                       new SystemException(__FILE__.'('.__LINE__.'): '.$msg));
                return;
            }
            $lgrouterfields = array(
                     'router_id'       => array('type'=>'integer','size'=>'medium','null'=>FALSE,'increment'=>TRUE,'primary_key'=>TRUE)
                    ,'router'          => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>'')
                    ,'address'         => array('type'=>'varchar','size'=>100,'null'=>FALSE,'default'=>'')
                    ,'username'        => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
                    ,'password'        => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
                    ,'zebra'           => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
                    ,'zebra_port'      => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
                    ,'zebra_password'  => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
                    ,'ripd'            => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
                    ,'ripd_port'       => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
                    ,'ripd_password'   => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
                    ,'ripngd'          => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
                    ,'ripngd_port'     => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
                    ,'ripngd_password' => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
                    ,'ospfd'           => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
                    ,'ospfd_port'      => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
                    ,'ospfd_password'  => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
                    ,'bgpd'            => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
                    ,'bgpd_port'       => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
                    ,'bgpd_password'   => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
                    ,'ospf6d'          => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0')
                    ,'ospf6d_port'     => array('type'=>'integer','size'=>'medium','null'=>FALSE,'default'=>'0')
                    ,'ospf6d_password' => array('type'=>'varchar','size'=>20,'null'=>FALSE,'default'=>'')
                    ,'use_argc'        => array('type'=>'integer','size'=>'tiny','null'=>FALSE,'default'=>'0'));
            $query = xarDBCreateTable($LGRouterTable,$lgrouterfields);
            if (empty($query)) return;
            $result =& $dbconn->Execute($query);
            if ($dbconn->ErrorNo() != 0) {
                $msg = xarML('DATABASE_ERROR', $sql);
                 xarErrorSet(XAR_SYSTEM_EXCEPTION, 'DATABASE_ERROR',
                       new SystemException(__FILE__.'('.__LINE__.'): '.$msg));
                return;
            }
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv4 BGP neighborship', 'show ip bgp summary', 'bgpd', '0');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv4 BGP RR to...', 'show ip bgp', 'bgpd', '1');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv4 OSPF neighborship', 'show ip ospf neighbor', 'ospfd', '0');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv4 OSPF RT', 'show ip ospf route', 'ospfd', '0');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv4 any RR to...', 'show ip route', 'zebra', '1');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'Interface info on...', 'show interface', 'zebra', '1');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv6 BGP neighborship', 'show ipv6 bgp summary', 'ripngd', '0');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv6 BGP route to...', 'show ipv6 bgp', 'ripngd', '1');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv6 OSPF neighborship', 'show ipv6 ospf neighbor', 'ospf6d', '0');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv6 OSPF RT', 'show ipv6 ospf route', 'ospf6d', '0');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRequestTable);
            $query = "INSERT INTO $LGRequestTable (request_id, request, command, handler, argc) VALUES ($id, 'IPv6 any route to...', 'show ipv6 route', 'zebra', '1');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRouterTable);
            $query = "INSERT INTO $LGRouterTable (router_id, router, address, username, password, zebra, zebra_port, zebra_password, ripd, ripd_port, ripd_password, ripngd, ripngd_port, ripngd_password, ospfd, ospfd_port, ospfd_password, bgpd, bgpd_port, bgpd_password, ospf6d, ospf6d_port, ospf6d_password, use_argc) VALUES ($id, 'default', '127.0.0.1', '', '', '1', '2601', '', '1', '2602', '', '1', '2603', '', '1', '2604', '', '1', '2605', '', '1', '2606', '', '1');";
            $result =& $dbconn->Execute($query);
            $id = $dbconn->GenId($LGRouterTable);
            $query = "INSERT INTO $LGRouterTable (router_id, router, address, username, password, zebra, zebra_port, zebra_password, ripd, ripd_port, ripd_password, ripngd, ripngd_port, ripngd_password, ospfd, ospfd_port, ospfd_password, bgpd, bgpd_port, bgpd_password, ospf6d, ospf6d_port, ospf6d_password, use_argc) VALUES ($id, 'ATT Public', 'route-server.ip.att.net', '', '', '1', '23', '', '0', '0', '', '0', '0', '', '1', '23', '', '1', '23', '', '0', '0', '', '1');";
            $result =& $dbconn->Execute($query);
            if ($dbconn->ErrorNo() != 0) {
                $msg = xarML('DATABASE_ERROR', $sql);
                 xarErrorSet(XAR_SYSTEM_EXCEPTION, 'DATABASE_ERROR',
                       new SystemException(__FILE__.'('.__LINE__.'): '.$msg));
                return;
            }
        case '1.1.0':
            xarModSetVar('netquery', 'http_req_enabled', 1);
        case '1.2.0':
        default:
            break;
    }
    return true;
}
function netquery_delete()
{
    xarModDelVar('netquery', 'looking_glass_enabled');
    xarModDelVar('netquery', 'trace_remote_enabled');
    xarModDelVar('netquery', 'trace_enabled');
    xarModDelVar('netquery', 'ping_remote_enabled');
    xarModDelVar('netquery', 'ping_enabled');
    xarModDelVar('netquery', 'http_req_enabled');
    xarModDelVar('netquery', 'port_check_enabled');
    xarModDelVar('netquery', 'dns_dig_enabled');
    xarModDelVar('netquery', 'dns_lookup_enabled');
    xarModDelVar('netquery', 'whoisip_enabled');
    xarModDelVar('netquery', 'whois_enabled');
    xarModDelVar('netquery', 'capture_log_enabled');
    xarRemoveMasks('netquery');
    xarRemoveInstances('netquery');
    $dbconn =& xarDBGetConn();
    $xartable =& xarDBGetTables();
    $LGRouterTable = $xartable['netquery_lgrouter'];
    $LGRequestTable = $xartable['netquery_lgrequest'];
    $ExecTable = $xartable['netquery_exec'];
    $WhoisTable = $xartable['netquery_whois'];
    xarDBLoadTableMaintenanceAPI();
    $query = xarDBDropTable($LGRouterTable);
    if (empty($query)) return;
    $result = &$dbconn->Execute($query);
    $query = xarDBDropTable($LGRequestTable);
    if (empty($query)) return;
    $result = &$dbconn->Execute($query);
    $query = xarDBDropTable($ExecTable);
    if (empty($query)) return;
    $result = &$dbconn->Execute($query);
    $query = xarDBDropTable($WhoisTable);
    if (empty($query)) return;
    $result = &$dbconn->Execute($query);
    return true;
}
?>
