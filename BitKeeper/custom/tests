#!/bin/bash
# $Id$ 

#
# bk tests - wrapper for the unit test framework
#
# 

#
# Requirements checking
#
# 1. php cgi must exist in the path
#
if type php4> /dev/null 2>&1
then PHP=php4
elif type php > /dev/null 2>&1
then PHP=php
else 
		echo No valid php interpreter found on your system.
		exit 1
fi


#
# Usage statement
#
_usage() {
    cat <<EOF 
Usage: tests [options]  -- run unittests 

Options:
  bk [-r] tests [-nl] [-s<suitelist>] [-o[html|text]]
            
Description:

  The 'bk tests' command runs the registered unittests for a certain 
  part of code. By default it looks for testsuites and testcases from
  the current directory downwards in directories named 'xartests'.
  If -r is specified the command runs from the root of the repository 
  and traverses all directories for xartests directories to look for tests.
  

  Options:
  -n     : don't show results, but *do* run the tests
  -l     : only list the suites and cases and do *not* run the tests
  -s     : only run the tests registered in the list of testsuites specified
           The <suitelist> is a comma separated list of suitenames.
           Default: run all testsuites.
  -o     : specify the output format to be generated
           - html : generate html
           - text : generate plain text
           Default: text

  If you want to run a specific testsuite specify it's name as displayed
  by 'bk tests -l'. Only that testsuite will then be executed. If the name
  of a testsuite contains space, replace those by underscores.
EOF

exit 1
}

# Define the options
# This works on linux but not on BSD
#TEMP=`getopt -lsuites:,cases:,output:,help,noresults,list -os:,c:,o:,h,n,l -n tests $*`
# Use the compatible one
TEMP=`getopt s:o:hnl $*`
set -- $TEMP

while true ; do
  case "$1" in
    -s|--suites)
      #extra argument is the suitelist
      shift 2;
      ;;
    -c|--cases)
      # extra argument is the caselist
      shift 2;
      ;;
    -o|--output)
      #extra argument is the output format
      shift 2;
      ;;
    -n|--noresults)
      shift;
      ;;      
    -l|--list)
      shift;
      ;;
    --)
      # we're done
      shift;
      break
      ;;
    -h|--help)
      _usage
      ;;
    *)
      # wrong
      _usage
      ;;
  esac
done

# TEMP now contains a space separated list of all things specified
#echo $TEMP
#exit 1

# -C don't change to that directory
# Quietly get the unittest code, if it is not already checked out
bk get -Sq `bk root`/BitKeeper/custom/unittest/
$PHP -qC `bk root`/BitKeeper/custom/unittest/runner.php $TEMP
