<xar:comment> License: GPL http://www.gnu.org/copyleft/gpl.html </xar:comment>

<xar:comment> ************************ Setup Tabs************************</xar:comment>
<xar:style scope="module" module="base" file="navtabs" />
<div class="xar-mod-head">
    <span class="xar-mod-title">
        <xar:mlstring>XarTinyMCE Administration</xar:mlstring>
    </span>
</div>
<div class="xar-mod-body">
    <xar:template type="module" module="tinymce" file="admin-menu" />
    <h2><xar:mlstring>Modify XarTinyMCE Configuration</xar:mlstring></h2>
    <div>
    <dl class="xar-tabs">
          <dt class="help" title="Choose a set of configuration options"><xar:mlstring>Select</xar:mlstring> :</dt>
        <xar:if condition="$tab eq 'basic'">
            <dd class="active"><a href="&xar-modurl-tinymce-admin-modifyconfig;&amp;tab=basic">
                    <xar:mlstring>Install Options</xar:mlstring>
                </a>
            </dd>
        <xar:else />
            <dd>
                <a href="&xar-modurl-tinymce-admin-modifyconfig;&amp;tab=basic">
                    <xar:mlstring>Install Options</xar:mlstring>
                </a>
            </dd>
        </xar:if>
        <xar:if condition="$tab eq 'general'">
            <dd class="active">
                <a href="&xar-modurl-tinymce-admin-modifyconfig;&amp;tab=general">
                    <xar:mlstring>Basic Options</xar:mlstring>
                </a>
            </dd>
        <xar:else />
            <dd>
                <a href="&xar-modurl-tinymce-admin-modifyconfig;&amp;tab=general">
                    <xar:mlstring>Basic Options</xar:mlstring>
                </a>
            </dd>
        </xar:if>
        <xar:if condition="$tab eq 'cssplug'">
            <dd class="active">
                <a href="&xar-modurl-tinymce-admin-modifyconfig;&amp;tab=cssplug">
                    <xar:mlstring>Attributes &amp; Styles</xar:mlstring>
                </a>
            </dd>
        <xar:else />
            <dd>
                <a href="&xar-modurl-tinymce-admin-modifyconfig;&amp;tab=cssplug">
                    <xar:mlstring>Attributes &amp;  Styles</xar:mlstring>
                </a>
            </dd>
        </xar:if>
        <xar:if condition="$tab eq 'customadvanced' and $tinytheme eq 'advanced'">
            <dd class="active">
                <a href="&xar-modurl-tinymce-admin-modifyconfig;&amp;tab=customadvanced">
                     <xar:mlstring>Advanced Theme Options</xar:mlstring>
                </a>
            </dd>
        <xar:elseif condition="$tinytheme eq 'advanced'"/>
            <dd>
                <a href="&xar-modurl-tinymce-admin-modifyconfig;&amp;tab=customadvanced">
                    <xar:mlstring>Advanced Theme Options</xar:mlstring>
                </a>
            </dd>
        </xar:if>
    <xar:if condition="$tab eq 'customconfig'">
            <dd class="active">
                <a href="&xar-modurl-tinymce-admin-modifyconfig;&amp;tab=customconfig">
                     <xar:mlstring>Advanced Config</xar:mlstring>
                </a>
            </dd>
        <xar:else />
            <dd>
                <a href="&xar-modurl-tinymce-admin-modifyconfig;&amp;tab=customconfig">
                    <xar:mlstring>Advanced Config</xar:mlstring>
                </a>
            </dd>
        </xar:if>
    </dl>
    </div>

<xar:comment> ************************ Begin Install Options ************************</xar:comment>
    <xar:if condition="$tab eq 'basic'">
        <form action="&xar-modurl-tinymce-admin-updateconfig;" method="post" enctype="application/x-www-form-urlencoded" >
        <input type="hidden" name="authid" id="authid" value="#$authid#" />
        <input type="hidden" name="tab" id="tab" value="#$tab#" />
        <fieldset>
            <legend>
            <strong><xar:mlstring>1. Set tags in HTML Module</xar:mlstring></strong>
            </legend>

            <ol  class="xar-norm" style="list-style-type:lower-alpha;">
                <li><xar:mlstring>Go to the HTML module</xar:mlstring></li>
                <li><a href="&xar-modurl-html-admin-set;" rel="ext"><xar:mlstring>Set HTML tags allowed</xar:mlstring></a><xar:mlstring> eg code, span, image, h1 and so on so they are rendered.</xar:mlstring></li>
            </ol>

        </fieldset>
        <fieldset>
            <legend>
               <strong><xar:mlstring>2. Set default editor</xar:mlstring></strong>
            </legend>

           <div class="xar-form-input-wrapper">
                <label for="defaulteditor" class="xar-form-label" title="#xarML('Set xartinymce as default so it activates automatically')#">
                        <xar:mlstring>TinyMCE as default editor?</xar:mlstring>
                </label>
                <select name="defaulteditor" id="defaulteditor" size="1">
                <xar:if condition="$defaulteditor eq 'tinymce'">
                    <option value="tinymce" selected="selected"><xar:mlstring>Yes</xar:mlstring></option>
                    <option value=""><xar:mlstring>No</xar:mlstring></option>
                <xar:elseif condition="$defaulteditor ne 'tinymce'" />
                   <option value="tinymce"><xar:mlstring>Yes</xar:mlstring></option>
                  <option value="#$defaulteditor#" selected="selected"><xar:mlstring>No</xar:mlstring></option>
               </xar:if>
               </select>
           </div>
         </fieldset>
        <fieldset class="formelements xar-norm">
            <legend>
                <xar:mlstring>3. Set Operation Mode</xar:mlstring>
            </legend>
           <div class="xar-form-input-wrapper">
                <label for="tinymode" class="xar-form-label">
                  <span class="help" title="#xarML('Select default replacement mode for TinyMCE')#">
                    <xar:mlstring>Choose Default Action Mode</xar:mlstring>
                </span>
                </label>
                <select name="tinymode" id="tinymode" size="1">
                <xar:if condition="$tinymode eq 'specific_textareas'">
                    <option value="textareas"><xar:mlstring>All Text areas</xar:mlstring></option>
                    <option value="specific_textareas" selected="selected"><xar:mlstring>Special Labelled only</xar:mlstring></option>
                <xar:else />
                   <option value="textareas"><xar:mlstring>All Text areas</xar:mlstring></option>
                   <option value="specific_textareas"><xar:mlstring>Special Labelled only</xar:mlstring></option>
                 </xar:if>
               </select>
           </div>
           <div class="xar-form-input-wrapper-after">
               <xar:mlstring>You can choose either of the following ways to add a WYSIWYG editor:</xar:mlstring>
           </div>

        <ol style="list-style-type:lower-alpha; ">
          <li>
                <xar:mlstring><strong>All Text Areas Mode</strong>: every textarea will be WYSIWYG enabled by default. 
                Turn off WYSIWYG in a specific div or textarea by adding the reserved class </xar:mlstring><strong><code>class="mceNoEditor"</code></strong>
                <xar:mlstring>to the textarea. You can also use a toggle or popup prompt for WYSIWYG. This option can affect performance as the javascript is loaded on every page.</xar:mlstring><br /><br />
          </li>
          <li><xar:mlstring><strong>Special Labelled Only</strong>: Only textareas that are specially labelled with the
              trigger class eg </xar:mlstring><strong><code>class="mceEditor"</code></strong> <xar:mlstring>are WYSIWYG activated.
              You can do this in two main ways:</xar:mlstring><br />
              <ul class="list-type-style:none;">
              <li><xar:mlstring>Add a  <strong>xarTinyMCE GUI Dynamic Data Property field</strong> to your Article pubtypes or
              xarPages Page Type, or anywhere else you need a WYSIWYG input area.</xar:mlstring></li>
              <li><xar:mlstring>Manually add the class and attribute to any textarea (if activation is Auto this is all you need do else you'll have to add the template snippet below to the top of your template).</xar:mlstring><br /></li>
              </ul>
              <xar:mlstring>You can set row height and column width in the DD validation field. eg 20:80 for 20 rows high, 80 columns wide. Alternatively use the resizing options available in other Modify Config Tabs.</xar:mlstring>
              </li>
       </ol>

       </fieldset>
       <fieldset>
            <legend>
               <strong><xar:mlstring>4. Set Activation Method</xar:mlstring></strong>
            </legend>
           <div class="xar-form-input-wrapper">
                <label for="tinyloadmode" class="xar-form-label" title="#xarML('Select automatic activation or manual')#">
                        <xar:mlstring>Automatic activation or manual?</xar:mlstring>
               </label>
                <select name="tinyloadmode" id="tinyloadmode" size="1">
                <xar:if condition="$tinyloadmode eq 'auto'">
                    <option value="auto" selected="selected"><xar:mlstring>Automatic</xar:mlstring></option>
                     <option value="manual"><xar:mlstring>Manual Override</xar:mlstring></option>
                <xar:else />
                   <option value="auto"><xar:mlstring>Automatic</xar:mlstring></option>
                   <option value="manual" selected="selected"><xar:mlstring>Manual Override</xar:mlstring></option>
                 </xar:if>
               </select>
        </div>
       <ol style="list-style-type:lower-alpha;">
         <li class="xar-norm" >
             <xar:mlstring><strong>Automatic</strong>: xarTinyMce is automatically activated when mode is 
             set to All TextAreas without the need to use tinymce DD properties or configure anything further. The disadvantage is that tinymce is loaded on every page. </xar:mlstring><br /><br />
         </li>
         <li class="xar-norm" ><xar:mlstring><strong>Manual Override</strong>: turns off automatic activation. xarTinyMCE DD properties are an exception and are still activated with this set as manual.
            Alternatively, specify where wysiwyg should or should not be activated by adding the specific template snippet code as shown below, to your page or other specific templates.
            All textareas contained or included in the template where you have the XarTinymce tags are converted to WYSIWYG according to the "All Text Area" or "Special Labelled Only" setting above.
            Advantages are that tinymce is only loaded when required rather than every page or in every textarea.
           </xar:mlstring>
         </li>
      </ol>
      <pre>
        &lt;xar:if condition="xarModGetVar('base','editor') eq 'tinymce'"&gt;
             &lt;xar:template file="tinymce_insert" module="tinymce" type="module" /&gt;
        &lt;/xar:if&gt;
     </pre>
     <p><xar:mlstring><strong>HINT:</strong> Copy <code>modules/tinymce/xartemplates/properties/showinput-tinymce.xd</code>
        to your own theme's <code>themes/yourtheme/modules/base/properties/showinput-textarea.xt</code> as a DD textarea override 
        and set to Specially Labelled and Manual loading mode. This way you can have all your pubtype or xarpages or other DD property textarea fields
        automatically converted to wysiwyg with or without button prompt, and tinymce is loaded on a page only when needed.
     </xar:mlstring>
     </p>
      </fieldset>
       <fieldset>
           <div class="xar-form-input-wrapper-after">
                <xar:mlstring>See the detailed </xar:mlstring><a href ="http://wiki.moxiecode.com/index.php/TinyMCE:Index"><xar:mlstring>usage instructions</xar:mlstring></a><xar:mlstring> for more detail on options.</xar:mlstring>
           </div>
           <div class="xar-form-input-wrapper-after">
            <input type="submit" value="#$updatebutton#" />
          </div>
      </fieldset>
    </form>
 <xar:comment> ************************ Begin Basic Config Options ************************</xar:comment>
    <xar:elseif condition="$tab eq 'general'" />
        <form action="&xar-modurl-tinymce-admin-updateconfig;" method="post" enctype="application/x-www-form-urlencoded" >
        <input type="hidden" name="authid" id="authid" value="#$authid#" />
        <input type="hidden" name="tab" id="tab" value="#$tab#" />
        <fieldset>
            <legend>
                <strong><xar:mlstring>Basic Editor options</xar:mlstring></strong>
            </legend>
           <div class="xar-form-input-wrapper">
                <label for="tinybrowsers" class="xar-form-label" title="#xarML('Select which browsers to use WYSIWYG - msie,gecko,opera,safari')#">
                       <xar:mlstring>Use for browsers:</xar:mlstring>
                </label>
                <input type="text" name="tinybrowsers" id="tinybrowsers" value="#$tinybrowsers#" size="40" maxlength="60" />
                <xar:mlstring>No spaces eg msie,gecko,opera,safari. Defaults to all.</xar:mlstring>
            </div>



           <div class="xar-form-input-wrapper">
                <label for="tinytheme" class="xar-form-label" title="#xarML('Select default Theme Edit Panel for TinyMCE')#">
                    <xar:mlstring>Default Theme Editor Panel</xar:mlstring>
                </label>
                <select name="tinytheme" id="tinytheme" size="1" onchange="submit();">
                <xar:foreach in="$themelist" value="$v" key="$k">
                    <xar:if condition="$v eq $tinytheme">
                        <option value="#$v#" selected="selected">#$v#</option>
                    <xar:else />
                        <option name="themelist.#$k#" value="#$v#">#$v#</option>
                    </xar:if>
                </xar:foreach>
                </select>
                <xar:mlstring>Extra options Tab appears for Advanced Theme</xar:mlstring>
               <!--
               <xar:mlstring>See </xar:mlstring><a href ="modules/tinymce/xartemplates/includes/tinymce/docs/customization_themes.html">
               <xar:mlstring>theme instructions</xar:mlstring></a><xar:mlstring> to code your own.</xar:mlstring>-->
           </div>

        <xar:comment> Remove until supported
           <div class="xar-form-input-wrapper">
                <label for="tinyinstances" class="xar-form-label" title="#xarML('List of instances, separated by commas, to replace if specific area mode selected')#">
                    <xar:mlstring>List areas to replace (not supported yet)</xar:mlstring>
                </label>
                <input type="text" name="tinyinstances" id="tinyinstances" value="#$tinyinstances#" size="60" maxlength="240" />
           </div>
        </xar:comment>

           <div class="xar-form-input-wrapper-after">
                <xar:if condition="$tinyask">
                    <input type="checkbox" name="tinyask" id="tinyask" value="1" checked="checked" />
                <xar:else/>
                    <input type="checkbox" name="tinyask" id="tinyask" value="1" />
                </xar:if>
                <label for="tinyask" title="#xarML('WYSIWYG is on by default, unless you check to ask user if they wish to use WYSIWYG for each text area')#">
                    <xar:mlstring>Prompt to use WYSIWYG (popup prompt or on by default)?</xar:mlstring>
                </label>
            </div>
            <!--<xar:if condition="$tinyask and (xarModGetVar('tinymce','tinymode') eq 'specific_textareas')">-->
            <div class="xar-form-input-wrapper-after">
             <xar:if condition="$usebutton">
                    <input type="checkbox" name="usebutton" id="usebutton" value="1" checked="checked"/>
                <xar:else/>
                    <input type="checkbox" name="usebutton" id="usebutton" value="1" />
                </xar:if>
                <label for="usebutton" title="#xarML('Use an on/off toggle button to prompt for WYSIWYG')#">
                    <xar:mlstring>Display an On/Off Toggle button for WYSIWYG?</xar:mlstring>
                </label>
                <xar:mlstring>(xartinymce DD property only)</xar:mlstring>
            </div>
            <!--
            <xar:else />
                <xar:set name="usebutton">0</xar:set>
            </xar:if>
            -->
            <div class="xar-form-input-wrapper-after">
                <xar:if condition="$tinytilemap">
                    <input type="checkbox" name="tinytilemap" id="tinytilemap" value="1" checked="checked"/>
                <xar:else/>
                    <input type="checkbox" name="tinytilemap" id="tinytilemap" value="1" />
                </xar:if>
                <label for="tinytilemap" title="#xarML('Use tiled images instead of individual for faster loading.')#">
                    <xar:mlstring>Use icon map?</xar:mlstring>
                </label>
                <xar:mlstring>(Faster loading, may not work in all setups)</xar:mlstring>
            </div>

            <div class="xar-form-input-wrapper-after">
              <xar:if condition="$tinycompressor">
                  <input type="checkbox" name="tinycompressor" id="tinycompressor" value="1" checked="checked"/>
              <xar:else/>
                  <input type="checkbox" name="tinycompressor" id="tinycompressor" value="1" />
              </xar:if>
                <label for="tinycompressor" title="#xarML('Use compressed js to increase preformance?')#">
                      <xar:mlstring>Use compressor?</xar:mlstring>
                </label>
                 <xar:mlstring>(Faster loading, may not work in all setups)</xar:mlstring>
           </div>

           <div class="xar-form-input-wrapper">
                <label for="tinywidth" class="xar-form-label" title="#xarML('Defaults to width of individual textareas if left blank')#">
                    <xar:mlstring>Override width:</xar:mlstring>
                </label>
                <input type="text" name="tinywidth" id="tinywidth" value="#$tinywidth#" size="8" maxlength="8" />
                 <xar:mlstring>Affects all textareas (enter in px eg 450). Turn off resizing.</xar:mlstring>
            </div>
           <div class="xar-form-input-wrapper">
                <label for="tinyheight" class="xar-form-label" title="#xarML('Defaults to height of individual textareas if left blank')#">
                    <xar:mlstring>Override height:</xar:mlstring>
            </label>
                <input type="text" name="tinyheight" id="tinyheigh" value="#$tinyheight#" size="8" maxlength="8" />
                <xar:mlstring>Affects all textareas (enter in px eg 450). Turn off resizing.</xar:mlstring>
           </div>

           <div class="xar-form-input-wrapper">
                <label for="tinyundolevel" class="xar-form-label" title="#xarML('Defaults to unlimited undo levels if left blank')#">
                    <xar:mlstring>Max # of undo levels :</xar:mlstring>
                </label>
                <input type="integer" name="tinyundolevel" id="tinyundolevel" value="#$tinyundolevel#" size="3" maxlength="3" />
                <xar:mlstring>Unlimited if blank</xar:mlstring>
           </div>
            <div class="xar-form-input-wrapper-after">
                <xar:if condition="$tinycleanup">
                    <input type="checkbox" name="tinycleanup" id="tinycleanup" value="1" checked="checked"/>
                <xar:else/>
                    <input type="checkbox" name="tinycleanup" id="tinycleanup" value="1" />
                </xar:if>
                <label for="tinycleanup" title="#xarML('Set cleanup functionality that enables you to specify what elements and attributes are allowed.')#">
                    <xar:mlstring>Use content cleanup?</xar:mlstring>
                </label>
                <xar:mlstring>(ON by default).</xar:mlstring>
            </div>

           <div class="xar-form-input-wrapper-after">
                <xar:if condition="$tinybr">
                    <input type="checkbox" name="tinybr" id="tinybr" value="1" checked="checked"/>
                <xar:else/>
                    <input type="checkbox" name="tinybr" id="tinybr" value="1" />
                </xar:if>

                <label for="tinybr" title="#xarML('Convert all new lines to &lt;br /&gt; tags instead of &lt;p&gt; tags')#">
                    <xar:mlstring>Convert new lines to &lt;br /&gt;</xar:mlstring>
                </label>
                <xar:mlstring>(OFF by default).</xar:mlstring>
              </div>
              <div class="xar-form-input-wrapper-after">
                <xar:if condition="$tinypara">
                    <input type="checkbox" name="tinypara" id="tinypara" value="1" checked="checked"/>
                <xar:else/>
                    <input type="checkbox" name="tinypara" id="tinypara" value="1" />
                </xar:if>
                <label for="tinypara" title="#xarML('Convert all newline chars to &lt;p /&gt; tags')#">
                    <xar:mlstring>Convert all new line chars to &lt;p /&gt;</xar:mlstring>
               </label>
                    <xar:mlstring>(ON by default).</xar:mlstring>
            </div>
             <div class="xar-form-input-wrapper-after">
                <xar:if condition="$stripbreaks">
                    <input type="checkbox" name="stripbreaks" id="stripbreaks" value="1" checked="checked"/>
                <xar:else/>
                    <input type="checkbox" name="stripbreaks" id="stripbreaks" value="1" />
                </xar:if>
                <label for="stripbreaks" title="#xarML('Strip all newlines')#">
                    <xar:mlstring>Strip all newlines</xar:mlstring>
               </label>
                    <xar:mlstring>(ON by default).</xar:mlstring>
            </div>
             <div class="xar-form-input-wrapper-after">
                <xar:if condition="$sourceformat">
                    <input type="checkbox" name="sourceformat" id="sourceformat" value="1" checked="checked"/>
                <xar:else/>
                    <input type="checkbox" name="sourceformat" id="sourceformat" value="1" />
                </xar:if>
                <label for="sourceformat" title="#xarML('Apply formatting to source')#">
                    <xar:mlstring>Apply source formatting</xar:mlstring>
               </label>
                    <xar:mlstring>(OFF by default).</xar:mlstring>
            </div>
           </fieldset>
         <!-- language options -->
        <fieldset>
            <legend>
                <strong><xar:mlstring>Language options</xar:mlstring></strong>
            </legend>
           <div class="xar-form-input-wrapper">
                <label for="tinylang" class="xar-form-label" title="#xarML('Select default language for TinyMCE')#">
                       <xar:mlstring>Default language</xar:mlstring>
                </label>
            <select name="tinylang" id="tinylang" size="1">
            <xar:foreach in="$langlist" value="$v" key="$k">
                <xar:if condition="$v eq $tinylang">
                    <option value="#$v#" selected="selected">#$v#</option>
                <xar:else />
                    <option name="langlist.#$k#" value="#$v#">#$v#</option>
                </xar:if>
            </xar:foreach>
            </select>
            <p class="xar-form-input-wrapper-after">
               <xar:mlstring>Supplied in UTF-8 format only. See </xar:mlstring><a href="http://wiki.moxiecode.com/index.php/TinyMCE:Creating_Language"><xar:mlstring>Creating a Language Pack</xar:mlstring></a> 
               <xar:mlstring>if you wish to edit or contribute a language pack. Further language packs for this version can 
               be downloaded at </xar:mlstring><a href="http://tinymce.moxiecode.com/language.php">Moxiecode Downloads</a>
            </p>
            </div>
            <div class="xar-form-input-wrapper">
                <label for="tinydirection" class="xar-form-label" title="#xarML('Select direction of text input - defaults left to right')#">
                    <xar:mlstring>Text input direction</xar:mlstring>
                </label>
                <select name="tinydirection" id="tinydirection" size="1">
                <xar:if condition="$tinydirection eq 'rtl'">
                   <option value="rtl" selected="selected"><xar:mlstring>Right to left</xar:mlstring></option>
                   <option value="ltr"><xar:mlstring>Left to right</xar:mlstring></option>
                <xar:else />
                   <option value="rtl"><xar:mlstring>Right to left</xar:mlstring></option>
                   <option value="ltr" selected="selected"><xar:mlstring>Left to right</xar:mlstring></option>
                </xar:if>
                </select>
                <xar:mlstring>Default is Left to right.</xar:mlstring>
           </div>
           <div class="xar-form-input-wrapper-after">
                <xar:if condition="$tinyencode">
                    <input type="checkbox" name="tinyencode" id="tinyencode" value="1" checked="checked"/>
                <xar:else/>
                    <input type="checkbox" name="tinyencode" id="tinyencode" value="1" />
                </xar:if>

                <label for="tinyencode" title="#xarML('Convert to a XML escaping entities eg ')#&amp;amp; &amp;quote; &amp;lt;">
                    <xar:mlstring>Convert to XML escaped character entities</xar:mlstring>
                </label>
                <xar:mlstring>(OFF by default).</xar:mlstring>
              </div>

           <div class="xar-form-input-wrapper">
                <label for="tinyentity_encoding" class="xar-form-label" title="#xarML('Select encoding method')#">
                       <xar:mlstring>Entity Encoding:</xar:mlstring>
                </label>
                <select name="tinyentity_encoding" id="tinyentity_encoding" size="1" onchange="submit();">
                <xar:if condition="$tinyentity_encoding eq 'raw'">
                   <option value="raw" selected="selected"><xar:mlstring>Raw</xar:mlstring></option>
                   <option value="numeric"><xar:mlstring>Numeric &amp;#160;</xar:mlstring></option>
                   <option value="named"><xar:mlstring>Named &amp;nbsp;</xar:mlstring></option>
                <xar:elseif condition="$tinyentity_encoding eq 'numeric'" />
                   <option value="raw"><xar:mlstring>Raw</xar:mlstring></option>
                   <option value="numeric" selected="selected"><xar:mlstring>Numeric </xar:mlstring></option>
                   <option value="named"><xar:mlstring>Named entities</xar:mlstring></option>
                <xar:else />
                   <option value="raw"><xar:mlstring>Raw</xar:mlstring></option>
                   <option value="numeric"><xar:mlstring>Numeric </xar:mlstring></option>
                   <option value="named"  selected="selected"><xar:mlstring>Named entities</xar:mlstring></option>
               </xar:if>

                </select>
                               <xar:mlstring>Default is Raw (none).</xar:mlstring>
                <p class="xar-form-input-wrapper-after">
                    <xar:mlstring>If 'named' a </xar:mlstring><a href="http://wiki.moxiecode.com/index.php/TinyMCE:Configuration/entities"><xar:mlstring>default string</xar:mlstring></a> <xar:mlstring>of named entities is used.</xar:mlstring>
                </p>

           </div>
        </fieldset>
       <fieldset>
            <div class="xar-form-input-wrapper-after">
                <input type="submit" value="#$updatebutton#" />
            </div>
       </fieldset>
    </form>

<xar:comment> ************************ Begin CSS and Plugin Options********************</xar:comment>

  <xar:elseif condition="$tab eq 'cssplug'" />
       <form action="&xar-modurl-tinymce-admin-updateconfig;" method="post" enctype="application/x-www-form-urlencoded" >
        <input type="hidden" name="authid" id="authid" value="#$authid#" />
        <input type="hidden" name="tab" id="tab" value="#$tab#" />

        <fieldset>
            <legend>
                <strong><xar:mlstring>Set CSS and Style Options</xar:mlstring></strong>
            </legend>
           <div class="xar-form-input-wrapper-after">
                <xar:if condition="$tinyinlinestyle">
                    <input type="checkbox" name="tinyinlinestyle" id="tinyinlinestyle" value="1" checked="checked" />
                <xar:else/>
                    <input type="checkbox" name="tinyinlinestyle" id="tinyinlinestyle" value="1" />
                </xar:if>

                <label for="tinyinlinestyle" title="#xarML('Converts attributes like width, height, border, to inline styles eg style= ....')#">
                    <xar:mlstring>Convert attributes to inline style?</xar:mlstring>
                </label>
            </div>

            <div class="xar-form-input-wrapper">
                <label for="tinyextended" class="xar-form-label" title="#xarML('Additional html tags, forced or alternate attributes and so on, separated by commas')#">
                    <xar:mlstring>Additional tags or attributes:</xar:mlstring>
                </label>
                <!--<input type="text" name="tinyextended" id="tinyextended" value="#$tinyextended#" size="70" maxlength="250" />-->
                <textarea class="mceNoEditor" name="tinyextended" id="tinyextended" cols="50" rows="3" >#$tinyextended#</textarea>
            </div>
              <div class="xar-form-input-wrapper-after">
               <xar:mlstring>Additional regex for allowed tags and attributes. </xar:mlstring>
               <a href="http://wiki.moxiecode.com/index.php/TinyMCE:Configuration/valid_elements#Default_rule_set:"><xar:mlstring>Check the Defaults</xar:mlstring></a>
               <xar:mlstring> before adding new allowed tags and attributes here.  Any added elements here are are added to the default with the <strong>extended_valid_elements</strong>
               config option. Separate each tag with a comma. *[*] allows all tags and attributes. If you have HTML module installed, its settings will override and
               prevent tags being rendered (but not filter out individual tags, or specific attributes).</xar:mlstring>
            </div>

            <div class="xar-form-input-wrapper">
                <label for="tinyinvalid" class="xar-form-label" title="#xarML('List of html tags that are not allowed, separated by commas. These will be stripped from the textarea.')#">
                    <xar:mlstring>Tags that are NOT allowed:</xar:mlstring>
                </label>
                <input type="text" name="tinyinvalid" id="tinyinvalid" value="#$tinyinvalid#" size="70" maxlength="250" />
            </div>

            <div class="xar-form-input-wrapper">
                <label for="tinycsslist" class="xar-form-label" title="#xarML('CSS file name for content and class dropdown list, relative to index.php')#">
                    <xar:mlstring>Content and Style list CSS</xar:mlstring>
                </label>
                <input type="text" name="tinycsslist" id="tinycsslist" value="#$tinycsslist#" size="60" maxlength="120" />
            </div>
            <div class="xar-form-input-wrapper-after">
               <xar:mlstring>Classes defined in this file appear in the Style dropdown list and affect content.</xar:mlstring>
            </div>
            <div class="xar-form-input-wrapper">
               <label for="editorcss" class="xar-form-label" title="#xarML('CSS file name for editor and toolbar/user interface, relative to index.php')#">
                    <xar:mlstring>Editor UI CSS File</xar:mlstring>
                </label>
              <input type="text" name="editorcss" id="editorcss" value="#$editorcss#" size="60" maxlength="120" /><br />
              <xar:mlstring>Affects the editor layout, toolbars and general look of the editor itself.</xar:mlstring>
            </div>
        </fieldset>

         <fieldset>
            <div class="xar-form-input-wrapper-after">
                 <input type="submit" value="#$updatebutton#" />
            </div>
         </fieldset>
    </form>

<xar:comment> ************************ Advanced Theme Options********************</xar:comment>
    <xar:elseif condition="$tab eq 'customadvanced'" />
        <form action="&xar-modurl-tinymce-admin-updateconfig;" method="post" enctype="application/x-www-form-urlencoded" >
        <input type="hidden" name="authid" id="authid" value="#$authid#" />
        <input type="hidden" name="tab" id="tab" value="#$tab#" />
        <fieldset>
            <legend>
                <strong><xar:mlstring>Advanced Theme Editor Options</xar:mlstring></strong>
            </legend>
        <div class="xar-form-input-wrapper">
                <label for="tinytoolbar" class="xar-form-label" title="#xarML('Position of the editor toolbar at top or bottom of text input area')#">
                        <xar:mlstring>Toolbar position:</xar:mlstring>
                </label>
                <select name="tinytoolbar" id="tinytoolbar" size="1">
                <xar:if condition="$tinytoolbar eq 'top'">
                    <option value="top" selected="selected"><xar:mlstring>Top</xar:mlstring></option>
                    <option value="bottom"><xar:mlstring>Bottom</xar:mlstring></option>
                <xar:else />
                    <option value="top"><xar:mlstring>Top</xar:mlstring></option>
                    <option value="bottom" selected="selected"><xar:mlstring>Bottom</xar:mlstring></option>
                </xar:if>
                </select>
          </div>
           <div class="xar-form-input-wrapper">
                <label for="tinyshowpath" class="xar-form-label" title="#xarML('Position of the status bar')#">
                   <xar:mlstring>Status bar display position:</xar:mlstring>
               </label>

                <select name="tinyshowpath" id="tinyshowpath" size="1">
                <xar:if condition="$tinyshowpath eq 'top'">
                    <option value="top" selected="selected"><xar:mlstring>Top</xar:mlstring></option>
                    <option value="bottom"><xar:mlstring>Bottom</xar:mlstring></option>
                <xar:else />
                    <option value="top"><xar:mlstring>Top</xar:mlstring></option>
                    <option value="bottom" selected="selected"><xar:mlstring>Bottom</xar:mlstring></option>
                </xar:if>
                </select>
                &nbsp;&nbsp;
               <xar:if condition="$tinyenablepath">
                   <input type="checkbox" name="tinyenablepath" id="tinyenablepath" value="1" checked="checked" />
               <xar:else />
                   <input type="checkbox" name="tinyenablepath" id="tinyenablepath" value="1" />
               </xar:if>
               <label for="tinyenablepath" title="#xarML('Enable or disable the status bar path')#">
                       <xar:mlstring>Display css rule path in status bar?</xar:mlstring>
               </label>
            </div>
            <div class="xar-form-input-wrapper-after">
               <xar:if condition="$tinyadvresize">
                   <input type="checkbox" name="tinyadvresize" id="tinyadvresize" value="1" checked="checked" />
               <xar:else />
                   <input type="checkbox" name="tinyadvresize" id="tinyadvresize" value="1" />
               </xar:if>
               <label for="tinyadvresize" title="#xarML('Enable vertical resizing of editor?')#">
                       <xar:mlstring>Allow vertical resizing of editor?</xar:mlstring>
               </label>

           </div>
           <div class="xar-form-input-wrapper-after">
               <xar:if condition="$tinyresizehorizontal">
                   <input type="checkbox" name="tinyresizehorizontal" id="tinyresizehorizontal" value="1" checked="checked" />
               <xar:else />
                   <input type="checkbox" name="tinyresizehorizontal" id="tinyresizehorizontal" value="1" />
               </xar:if>
               <label for="tinyresizehorizontal" title="#xarML('Enable horizontal resizing of editor?')#">
                   <xar:mlstring>Allow horizontal resizing of editor?</xar:mlstring>
               </label>

           </div>
        <xar:comment>jojodee - Fix this when i get time
        <div class="xar-form-input-wrapper">
                <label for="tinyexstyle" class="xar-form-label" title="#xarML('List of other style elements to add - must be defined in your style sheet or page')#">
                    <xar:mlstring>Extended style list</xar:mlstring>
                </label>
                <input type="text" name="tinyexstyle" id="tinyexstyle" value="#$tinyexstyle#" size="60" maxlength="120" />
            </div>
        </xar:comment>
        <div class="xar-form-input-wrapper">
            <label for="tinyadvformat" class="xar-form-label" title="#xarML('Comma separated list of block formats to be used in format drop down list.')#">
                    <xar:mlstring>List of block formats:</xar:mlstring>
            </label>
               <textarea class="mceNoEditor" name="tinyadvformat" id="tinyadvformat" cols="50" rows="3" >#$tinyadvformat#</textarea>
        </div>
        <div class="xar-form-input-wrapper-after">
           <xar:mlstring>These default to p, address, pre, h1, h2, h3, h4, h5 and h6 if left blank. You can add div,blockquote,dt,dd,code,samp.</xar:mlstring>
        </div>
        </fieldset>
       <fieldset>
            <legend>
                <strong><xar:mlstring>Plugin Options</xar:mlstring></strong>
            </legend>

            <p>
            <xar:mlstring>See the detailed </xar:mlstring><a href ="http://wiki.moxiecode.com/index.php/TinyMCE:Plugins"><xar:mlstring>usage instructions</xar:mlstring></a><xar:mlstring> for more detail on each plugin.</xar:mlstring>
            </p>
            <div class="xar-form-input-wrapper-before xar-padding-medium">
                <label for="tinyplugins" class="xar-form-label" title="#xarML('Add names of any extra plugins you wish to load here.')#">
                    <xar:mlstring>Names of plugins to load (separated by commas):</xar:mlstring>
                </label>
                <textarea class="mceNoEditor" name="tinyplugins" id="tinyplugins" cols="50" rows="3" >#$tinyplugins#</textarea>
               <!--<input type="text" name="tinyplugins" id="tinyplugins" value="#$tinyplugins#" size="70" maxlength="250" />-->

            </div>

             <div class="xar-form-input-wrapper-after">
                    <p><xar:mlstring><strong>Available plugins (bundled):</strong> save, emotions, iespell (IE only), insertdatetime, preview, zoom,
                     advimage, advlink, flash, advhr, searchreplace, print, table, xarpagebreak, contextmenu, lorem, paste, 
                     fullscreen, directionality, fullpage, liststyle, layer, style, spellchecker, media, visualchars, nonbreaking, xhtmlxtras, devkit</xar:mlstring></p>
             </div>

             <xar:if condition="$dateplug">
             <div class="xar-form-input-wrapper">
                <label for="tinydate" class="xar-form-label" title="#xarML('Format for Date')#">
                    <xar:mlstring>Format for date</xar:mlstring>
                </label>
                <input type="text" name="tinydate" id="tinydate" value="#$tinydate#" size="15" maxlength="25" />
                <xar:mlstring>Default is YYYY-MM-DD</xar:mlstring>
             </div>
             <div class="xar-form-input-wrapper-after">
                    <xar:mlstring>%y as year range 00 to 99, %Y as year YYYY, %d day range 01 to 31, %m month range 01 to 12, %D same as %m/%d/%y</xar:mlstring>
             </div>
             <div class="xar-form-input-wrapper">
                <label for="tinytime" class="xar-form-label" title="#xarML('Format for Time')#">
                    <xar:mlstring>Format for time :</xar:mlstring>
                </label>
                <input type="text" name="tinytime" id="tinytime" value="#$tinytime#" size="15" maxlength="25" />
                <xar:mlstring>Default is HH:MM:SS</xar:mlstring>
             </div>
             <div class="xar-form-input-wrapper-after">
                    <xar:mlstring>%H hour using a 24-hour clock, %M minute as 00-59, %S second as 00-59, %% - a literal `%' character</xar:mlstring>
             </div>
             </xar:if>
          <div class="xar-form-input-wrapper-after">
               <xar:if condition="$usefilebrowser">
                   <input type="checkbox" name="usefilebrowser" id="usefilebrowser" value="1" checked="checked" />
               <xar:else />
                   <input type="checkbox" name="usefilebrowser" id="usefilebrowser" value="1" />
               </xar:if>
               <label for="usefilebrowser" title="#xarML('Use the filebrowser for advanced image, link or flash plugins?')#">
                       <xar:mlstring>Use integrated <strong>Filebrowser</strong> for file browsing and uploading for eg images, links, flash plugins ?</xar:mlstring>
               </label>
           </div>
           <p class="xar-form-input-wrapper-after">
              You need to install the <strong>advimage</strong>, <strong>advlink</strong> or flash plugin to use FileBrowser.
           </p>
        <div class="xar-form-input-wrapper-before">
            <p><xar:mlstring>To use FileBrowser (or downloaded Xaraya IBrowser or IManager plugin):</xar:mlstring></p>
            <ul>
            <li><xar:mlstring>Add <strong>ibrowser or imanager</strong> (or any plugin that uses filebrowser eg advimage or advlink) to the plugins above</xar:mlstring></li>
            <li><xar:mlstring>Add <strong>ibrowser or imanager </strong> to the button list in Advanced Theme Layout option below.</xar:mlstring></li>
            <li><xar:mlstring> Update the </xar:mlstring><a href="modules/tinymce/xartemplates/includes/tinymceconfig.inc.php"><xar:mlstring>configuration file at modules/tinymce/xartemplates/includes/tinymceconfig.inc.php</xar:mlstring></a>
                <xar:mlstring> and copy to your <code>var/tinymce/tinymceconfig.inc.php</code> directory</xar:mlstring>
            </li>
            </ul>

         </div>
         </fieldset>
        <fieldset>
            <legend>
                 <xar:mlstring>Advanced Theme Button Layout</xar:mlstring>
           </legend>
        <div class="xar-form-input-wrapper-before">
             <p><xar:mlstring>If you wish to change the DEFAULTS then you can add or remove buttons, or define
               which buttons appear.</xar:mlstring>
             </p>

           <ol>
               <li><xar:mlstring><strong>Valid button names are</strong> (separate names by comma - no spaces):</xar:mlstring>
               bold, italic, underline, strikethrough, justifyleft, justifycenter, justifyright, justifyfull, styleselect, bullist, numlist, outdent, indent, undo,redo, link, unlink, image, cleanup, help, code, table (or separate components as row_before, row_after, delete_row, separator, rowseparator, col_before, col_after, delete_col), hr, removeformat, sub, sup, formatselect, fontselect, fontsizeselect, forecolor, backcolor, charmap, visualaid, spacer, cut, copy</li>
              <li><xar:mlstring><strong>Valid plugin button options</strong></xar:mlstring> - save, iespell, preview, zoom, emotions, insertdate, inserttime, advhr, flash, search, replace, print, tablecontrols (all table controls), table, row_props, cell_props, delete_col, delete_row, col_after, col_before, row_after, row_before,
              xarpagebreak, lorem, [for paste plugin, one or more of: pastetext, pasteword, selectall], fullscreen, ltr, rtl, fullpage, liststyle, styleprops, [layer plugin, one or more of: insertlayer, moveforward, movebackward, absolute], spellchecker, media, visualchars, nonbreaking, [xhtmlxtras plugin, one or more of: abbr, acronym, cite, del].
               </li>
            </ol>
         </div>
        <div class="xar-form-input-wrapper">
                <label for="customizebuttons" class="xar-form-label" title="#xarML('Add extra button or plugins for this theme here')#">
                     <strong><xar:mlstring>Add EXTRA Buttons: </xar:mlstring></strong>
                 </label>
                 <xar:mlstring>Add these extra buttons to your editor toolbar.</xar:mlstring>
        </div>
        <div class="xar-form-input-wrapper">
                <label for="tinybuttons" class="xar-form-label" title="#xarML('Additional buttons for this theme for Line 1 - see manual')#">
                     <xar:mlstring>Row 1</xar:mlstring>
                </label>
                <input type="text" name="tinybuttons" id="tinybuttons" value="#$tinybuttons#" size="60" maxlength="250" />
        </div>
        <div class="xar-form-input-wrapper">
                <label for="tinybuttons2" class="xar-form-label" title="#xarML('Additional buttons for this theme for Line 2 - see manual')#">
                    <xar:mlstring>Row 2</xar:mlstring>
               </label>
                <input type="text" name="tinybuttons2" id="tinybuttons2" value="#$tinybuttons2#" size="60" maxlength="250" />
        </div>
        <div class="xar-form-input-wrapper">
                <label for="tinybuttons3" class="xar-form-label" title="#xarML('Additional buttons for this theme for Line 3 - see manual')#">
                    <xar:mlstring>Row 3</xar:mlstring>
               </label>
                <input type="text" name="tinybuttons3" id="tinybuttons3" value="#$tinybuttons3#" size="60" maxlength="250" />
        </div>

        <div class="xar-form-input-wrapper">
                <label for="tinybuttonsremove" class="xar-form-label" title="#xarML('Buttons to remove from Advanced theme')#">
                        <xar:mlstring>Remove these buttons:</xar:mlstring>
                </label>
                <input type="text" name="tinybuttonsremove" id="tinybuttons" value="#$tinybuttonsremove#" size="60" maxlength="250" />
        </div>
        </fieldset>
        <fieldset>
            <legend>
                <xar:mlstring>Build Your Own Layout</xar:mlstring>
            </legend>
            <div class="xar-form-input-wrapper">
                <xar:mlstring>You can define your own Custom Editor Layout from here using existing buttons.
                          Any entry in a row will force use of this custom layout. A <strong>space</strong> alone will remove a row so be careful!
                </xar:mlstring>
            </div>
            <div class="xar-form-input-wrapper">
                <label for="tinybuild1" class="xar-form-label" title="#xarML('Restrict buttons for Line 1 to these buttons only')#">
                     <xar:mlstring>Row 1</xar:mlstring>
                </label>
                <input type="text" name="tinybuild1" id="tinybuild1" value="#$tinybuild1#" size="60" maxlength="250" />
            </div>
            <div class="xar-form-input-wrapper">
                <label for="tinybuild2" class="xar-form-label" title="#xarML('Restrict buttons for Line 2 to these buttons only')#">
                    <xar:mlstring>Row 2</xar:mlstring>
                </label>
                <input type="text" name="tinybuild2" id="tinybuild2" value="#$tinybuild2#" size="60" maxlength="250" />
            </div>
            <div class="xar-form-input-wrapper">
                <label for="tinybuild3" class="xar-form-label" title="#xarML('Restrict buttons for Line 3 to these buttons only')#">
                    <xar:mlstring>Row 3</xar:mlstring>
                </label>
                <input type="text" name="tinybuild3" id="tinybuild3" value="#$tinybuild3#" size="60" maxlength="250" />
            </div>
       </fieldset>
       <fieldset>
            <div class="xar-form-input-wrapper-after">
                 <input type="submit" value="#$updatebutton#" />
            </div>
       </fieldset>
   </form>

<xar:comment> ************************ Custom Config Option********************</xar:comment>
    <xar:elseif condition="$tab eq 'customconfig'" />
        <form action="&xar-modurl-tinymce-admin-updateconfig;" method="post" enctype="application/x-www-form-urlencoded" >
        <input type="hidden" name="authid" id="authid" value="#$authid#" />
        <input type="hidden" name="tab" id="tab" value="#$tab#" />
        <fieldset>
            <legend>
                <xar:mlstring>Multiple Configuration Instances</xar:mlstring>
            </legend>
            <div class="xar-form-input-wrapper xar-padding-medium">
                    <xar:if condition="$dousemulticonfig">
                        <input type="checkbox" name="dousemulticonfig" id="dousemulticonfig" value="1" checked="checked" />
                    <xar:else />
                        <input type="checkbox" name="dousemulticonfig" id="dousemulticonfig" value="1" />
                    </xar:if>
                    <label for="usemulticonfig" title="#xarML('Would you like to use multiple configuration settings?')#">
                            <xar:mlstring>
                                <strong>Use multiple configurations?</strong> (Must be checked for activation of custom config options below).
                            </xar:mlstring>
                    </label>
            </div>
            <div class="xar-form-input-wrapper xar-padding-medium" >
                <ul>
                <li><xar:mlstring>Enter code for multiple configuration instances of tinymce.
                In each configuration you must have at least</xar:mlstring>
                <br /><code>mode : "textareas",
                   editor_selector : "yourtriggerclassname",</code>
                <br /></li>
                <li><strong><xar:mlstring>Do not</xar:mlstring></strong><xar:mlstring> use the default </xar:mlstring>
                   <strong><code>class="mceEditor"</code></strong><xar:mlstring> as the trigger name.</xar:mlstring></li>
                <li><xar:mlstring>You can set multiple instances here.To use a specific configuration add the trigger class name to
                   your div or textarea where you want the wysiwyg instance eg</xar:mlstring> <strong><code>class="MyEditorConfig"</code></strong></li>
                <li><xar:mlstring>For Articles fields or TinyMCE Dynamic Data properties, enter the <strong><code>editor_selector</code></strong> 
                   value into the "Editor Selector" box in the field's validation.  If this is not set in validation, <strong><code>mceEditor</code></strong> will be used as a default.<xar:mlstring></li>
                <li><xar:mlstring>Please <strong>check the final tinymce config code</strong> in the code display at the end of this screen before use!</xar:mlstring></li>
                </ul>
            </div>
            <div class="xar-form-input-wrapper xar-padding-medium">
                <label for="multiconfig" class="xar-form-label" title="#xarML('Enter additional individual custom config options here')#">
                        <xar:mlstring>Custom Config options:</xar:mlstring>
                </label>

                <textarea class="mceNoEditor" name="multiconfig" id="multiconfig" cols="50" rows="10" >#$multiconfig#</textarea>
           </div>

          </fieldset>
        <fieldset>
            <legend>
                <strong><xar:mlstring>Custom Configuration Code</xar:mlstring></strong>
            </legend>
            <p class="xar-padding-medium">
              <xar:mlstring>This option allows you to add additional custom configuration options that are added to the DEFAULT tinymce configuration string. </xar:mlstring>
                <xar:mlstring>Please refer to the TinyMCE </xar:mlstring><a href="http://wiki.moxiecode.com/index.php/TinyMCE:Index"><xar:mlstring>Usage Documentation</xar:mlstring></a>.

            </p>
            <p class="xar-padding-medium"><xar:mlstring>Each option should be on a separate line, ending in a comma, in the format</xar:mlstring>: <code>option : "value",</code>

            </p>
            <div class="xar-form-input-wrapper xar-padding-medium">
                <label for="tinycustom" class="xar-form-label" title="#xarML('Enter additional config options here')#">
                        <xar:mlstring>Custom Config options:</xar:mlstring>
                </label>
                <textarea class="mceNoEditor"  name="tinycustom" id="tinycustom" cols="50" rows="10" >#$tinycustom#</textarea>
           </div>
       </fieldset>
       <fieldset>
            <legend>
                <strong><xar:mlstring>Current active default configuration</xar:mlstring></strong>
            </legend>

            <div class="xar-form-input-wrapper-before">
                 <pre>#$jsstrings#</pre>
            </div>
            </fieldset>
            <fieldset>
                <div class="xar-form-input-wrapper-after">
                    <input type="submit" value="#$updatebutton#" />
               </div>
            </fieldset>
        </form>
    </xar:if>
</div>
