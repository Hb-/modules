<xar:comment> License: GPL http://www.gnu.org/copyleft/gpl.html </xar:comment>

<div class="xar-mod-head">
    <span class="xar-mod-title"><xar:mlstring>Administration - SiteContact</xar:mlstring></span>
</div>
<div class="xar-mod-body">
 <xar:template type="module" file="admin-menu" />
    <img src="#xarTplGetImage('admin_generic.gif','sitecontact')#" class="xar-module-icon" alt="official icon" width="96" height="96" />
    <h2>
        <xar:mlstring>Overview</xar:mlstring>
    </h2>
    <h3>
      <xar:mlstring>What is it?</xar:mlstring>
    </h3>
        <p style="margin-left: 1em; margin-right: 1em; text-align:left;"> <em><xar:mlstring>SiteContact
            is a simple module that allows visitors to easily contact the Site
            Administrator by email. The module allows you to setup one or more forms with different fields and configurations using dynamic data. It comes preinstalled with one default Contact Form.</xar:mlstring></em>
        </p>
    <h2>
        <xar:mlstring>How to use it?</xar:mlstring>
    </h2>
        <p style="margin-left: 1em; margin-right: 1em; text-align:left;"> <xar:mlstring>Install SiteContact
            as usual from the administration Module listing. There is one table (sitecontact) currently used to hold different contact form definitions. Then, setup the module configuration in Modify Config option.
            </xar:mlstring>
        </p>
        <p style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <xar:mlstring>Sitecontact is ready to go. You can use the default form without any further configuration.
            If you want to configure your default contact form, or create further forms, review the following.
            </xar:mlstring>
        </p>
        <h3><xar:mlstring>Using and Customizing Display and Email Forms</xar:mlstring></h3>
      <ol>
        <li><xar:mlstring>
        By default, a user will be able to see the Default Form  that you have configured for your site (see ModifyConfig options below). If no sitecontact form is specified in a URL the default form is used.
        </xar:mlstring></li>

        <li><xar:mlstring>
        You can provide a link to any form by appending the form name variable called: <strong>scform</strong> and a form name, for example 'myniceform', to the main user url eg <strong>index.php?module=sitecontact&amp;scform=myniceform</strong> or
         with short urls <strong>index.php/sitecontact/myniceform</strong>
        </xar:mlstring></li>

        <li><xar:mlstring>
        All forms will use the default display template (<code>user-main.xd</code>) for display of the form on your site.
        You can also create custom templates with the name of your form appended to the end (user-main-<code>myform</code>.xd).
        Form templates can be overridden in your theme as per other Xaraya templates (eg create <code>user-main-myform.xt</code> in
         your themes/yourtheme/modules/sitecontact directory), and will fall back to the default template if no others exist.</xar:mlstring></li>
        <li><xar:mlstring>You can also create override templates that are used to send the emails to Admins of your site, or the users when they request a copy of the email. Each has both a HTML and TEXT template. The <strong>admin</strong> default html
         and text email templates are <code>user-adminmail-html.xd</code> and <code>user-adminmail-text.xd</code> respectively.
          The <strong>user</strong> templates are <code>user-usermail-html.xd</code> and <code>user-usermail-text.xd</code> respectively.
         Override them in your theme.
        </xar:mlstring>
        </li>
        <li><xar:mlstring>You can go further and create custom email templates for html and text for each FORM. eg if your
         form is called <strong>basic</strong> you can create an override text email template called <code>user-usermail-html-basic.xt</code></xar:mlstring>
        </li>
        </ol>

        <h3><xar:mlstring>Manage Contact Forms</xar:mlstring></h3>
        <ol>
        <li><xar:mlstring>
        This option allows you to create new forms, modify, delete and preview existing ones. Sitecontact is installed with a default 'basic' form that you can start to use immediately.
        Read below for the configuration options.
        </xar:mlstring></li>

        <li><xar:mlstring>
        You can create new forms that will initially have configuration settings populated with the default values that you have set in the global Modify Config option (see below).
        </xar:mlstring></li>

        </ol>

        <a name="modifyconfig" title="Modify Config"><h3><xar:mlstring>Modify Configuration (Global Configuration)</xar:mlstring></h3></a>
        <p style="margin-left: 1em; margin-right: 1em; text-align:left;">
        <xar:mlstring>There are a number of variables you can set in the Modify Config
                option. These options are preset on install but you can change them. They are the GLOBAL options for sitecontact 
                and will be used for all *new* contact forms that you create.</xar:mlstring>
        </p>
          <ol>
            <li><xar:mlstring>Check the Short URL checkbox to use short urls</xar:mlstring></li>
            <li><xar:mlstring>You should set a <strong>Default Form</strong> for use on your site when no other forms are specified.</xar:mlstring></li>
            <li><xar:mlstring>You can use HTML in your emails or in the configurable text that
                displays in SiteContact pages. But, please, if you do, make sure
                you have HTML allowed in your site by configuring the
                HTML module to use the HTML tags you wish to use.</xar:mlstring></li>
            <li><xar:mlstring>Note that you <strong>can</strong> use HTML email in Sitecontact by checking the <code>Use HTML Email</code>
            option in the SiteContact configuration. This will allow HTML mail just for Sitecontact module,
            even if your default mail setup is text.</xar:mlstring></li>
            <li><xar:mlstring>By default, all emails are sent to the administrator email address
                specified in the Mail module. You can override this for each of
                the Subject options of your feedback form. Just add the subject
                option and alternative email in the form:</xar:mlstring>

        <blockquote>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
        <strong>Subject-line<span style="color:#FF0000;">;</span>optional-email<span style="color:#FF0000;">,</span></strong>
        </div>
        </blockquote>
            </li>
            <li><xar:mlstring>The line <strong>must end with a comma</strong>. The semi-colon
                and optional email can be omitted. Don't forget to test your setup
                by sending yourself an email through SiteContact!
            </xar:mlstring></li>
            <li><xar:mlstring>The HTML and text emails that are sent to the website contact (admin or other) and the user are based on
            templates in the module's xartemplate directory. There is a text and an HTML version for both the
            Admin notification email (user-adminmail-text.xd and user-adminmail-html.xd) and the user (user-
            usermail-text.xd and user-usermail-html.xd).
            </xar:mlstring></li>
        </ol>
    <h3><xar:mlstring>CC or BC to other Recipients</xar:mlstring></h3>
    <p><xar:mlstring>You can configure your forms with a list of CC or BC recipients from the configuration for each form. The CC and BC fields take a list of recipient emails and optionally a name for each. These emails and names must be in the correct format. Keep in mind the following:</xar:mlstring></p>
    <ol>
            <li><xar:mlstring>If you have a list of email addresses, separate each by a semicolon (;) eg <code>person1@somedomain.com;person2@anotherdomain.com</code>
            </xar:mlstring><br /></li>
            <li><xar:mlstring>If you have a list of email addresses and optional names, separate the name from the email addres with a comma eg<br />
            <code>person1@somedomain.com,name1;person2@anotherdomain.com,name2</code>
            </xar:mlstring></li>
        </ol>
        <p><xar:mlstring>NOTE: CC and BC do not work with Windows and the mail() function. They both should work with SMTP mail.</xar:mlstring></p>
    <h3><xar:mlstring>Extend Forms with Dynamic Data</xar:mlstring></h3>
    <ol>
            <li><xar:mlstring><strong>Hook Dynamic Data to Site Contact forms</strong> for either individual
            forms or all of them and setup your custom dynamic data property fields for each of your sitecontact forms.
            Your Dynamic Data fields will be <strong>included by default</strong> in display templates or outgoing emails  - no need to add them manually if you use the default sitecontact system template. </xar:mlstring><br /></li>
            <li><xar:mlstring>
            You can customize the dynamic data output in the respective user display templates, and the email templates. It is recommended you copy the default system template and edit that, so you can see how the dynamic data is added in the template. You can also <strong>remove</strong> fields that you do not want displayed by editing the templates, or retemplate their output. Who said simple modules aren't powerful :)
            </xar:mlstring></li>
        </ol>
    <h3><xar:mlstring>Adding An Attachment</xar:mlstring></h3>
    <p><xar:mlstring>You can add a Dynamic Data field to your form to allow users to add an Attachment to their email. To do:</xar:mlstring></p>
    <ol>
        <li><xar:mlstring>Make sure you <strong>do</strong> have Dynamic Data hooked, but <strong>do not</strong> have the Uploads module hooked to your Site contact form</xar:mlstring></li>
        <li><xar:mlstring>Add a Dynamic Data property of type <strong>File Upload</strong> to your form. This will provide the attachment field.</xar:mlstring></li>
        <li><xar:mlstring>Once you add and save the DD field, ensure you set the Validation for this File Upload field type. Add something like:
        </xar:mlstring><code>var/uploads/resumes;(doc|jpg|tar.gz|zip);1000000</code> <xar:mlstring>In this example the attachment will be temporarily uploaded to the <strong>var/uploads/resume</strong> directory but deleted once the email has been sent. Make sure this temporary upload directory is writeable.</xar:mlstring></li>

    </ol>


    <h3>
        <xar:mlstring>Included Blocks</xar:mlstring>
    </h3>
    <p>
        None at this stage
    </p>
    <h3>
        <xar:mlstring>Further Information</xar:mlstring>
    </h3>
    <p>
        <xar:mlstring>Further information on the Sitecontact module can be found at</xar:mlstring>
    </p>
       <ul>
              <li><xar:mlstring>Sitecontact Extension page at</xar:mlstring> <a title="#xarML('Sitecontact Module - Xaraya Extension 890')#" href="http://www.xaraya.com/index.php/release/890.html">Xaraya Extension and Releases</a>.
              <xar:mlstring> Click on Version History tab at the bottom to get the latest release information.</xar:mlstring>
              </li>
              <li><xar:mlstring>Related tutorials and documentation on the Sitecontact found at</xar:mlstring> <a href="http://www.xaraya.com/index.php/keywords/sitecontact/" title="#xarML('Related documentation on Sitecontact')#"><xar:mlstring>Xaraya Documentation.</xar:mlstring></a>
              </li>
         </ul>
         <p class="xar-sub">
             <strong>&nbsp;<xar:mlstring>Sitecontact Module Overview</xar:mlstring></strong><br />&nbsp;<xar:mlstring>Doc Version</xar:mlstring> 1.6.0&nbsp; 2006-04-02
         </p>
      </div>


