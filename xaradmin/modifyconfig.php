<?php
/**
 * Gallery
 *
 * @package   Xaraya eXtensible Management System
 * @copyright (C) 2006 by Brian McGilligan
 * @license   New BSD License <http://www.abrasiontechnology.com/index.php/page/7>
 * @link      http://www.abrasiontechnology.com/
 *
 * @subpackage Gallery module
 * @author     Brian McGilligan
 */

/**
   This is a standard function to modify the configuration parameters of the
   module

   @return template data
*/
function gallery_admin_modifyconfig()
{
    // Security check - important to do this as early as possible to avoid
    // potential security holes or just too much wasted processing
    if( !Security::check(SECURITY_ADMIN, 'gallery') ){ return false; }

    if( !xarVarFetch('submit', 'str', $submit, null, XARVAR_NOT_REQUIRED) ){ return false; }

    if( !empty($submit) )
    {
        /*
            Update all config vars.
        */
        if( !xarVarFetch('support_short_urls', 'str', $short_urls, '', XARVAR_NOT_REQUIRED) ){ return false; }
        if( !xarVarFetch('items_per_page', 'int', $items_per_page, 10, XARVAR_NOT_REQUIRED) ){ return false; }
        if( !xarVarFetch('cols_per_page', 'int', $cols_per_page, 3, XARVAR_NOT_REQUIRED) ){ return false; }
        if( !xarVarFetch('file_path', 'str', $file_path, '', XARVAR_NOT_REQUIRED) ){ return false; }
        if( !xarVarFetch('sort', 'str', $sort, '', XARVAR_NOT_REQUIRED) ){ return false; }
        if( !xarVarFetch('sort_order', 'str', $sort_order, '', XARVAR_NOT_REQUIRED) ){ return false; }
        if( !xarVarFetch('new_album_success', 'str', $new_album_success, '', XARVAR_NOT_REQUIRED) ){ return false; }
        if( !xarVarFetch('new_file_success', 'str', $new_file_success, '', XARVAR_NOT_REQUIRED) ){ return false; }
        if( !xarVarFetch('module_alias', 'str', $module_alias, '', XARVAR_NOT_REQUIRED) ){ return false; }

        xarModSetVar('gallery', 'SupportShortURLs', $short_urls);
        xarModSetVar('gallery', 'items_per_page', $items_per_page);
        xarModsetVar('gallery', 'cols_per_page', $cols_per_page);
        xarModsetVar('gallery', 'new_album_success', $new_album_success);
        xarModsetVar('gallery', 'new_file_success', $new_file_success);
        xarModsetVar('gallery', 'sort', $sort);
        xarModsetVar('gallery', 'sort_order', $sort_order);

        if( file_exists($file_path) )
        {
            $last_char = strlen($file_path)-1;
            if( $file_path[$last_char] != '/'){ $file_path .= '/'; }
            xarModSetVar('gallery', 'file_path', $file_path);
        }
        /*
            Update the module alias removes old alias before setting new alias
        */
        $old_alias = xarModGetVar('gallery', 'module_alias');
        if( (empty($module_alias) || $old_alias != $module_alias) && !empty($old_alias) )
            xarModDelAlias($old_alias, 'gallery');

        if( $old_alias != $module_alias )
            xarModSetAlias($module_alias, 'gallery');

        xarModSetVar('gallery', 'module_alias', $module_alias);

        xarModCallHooks('module', 'updateconfig', 'gallery',
            array('module'   => 'gallery', 'itemtype' => 1)
        );
    }

    $data = array();

    $shorturls = xarModGetVar('gallery', 'SupportShortURLs');
    if( !empty($shorturls) ){ $data['shorturls'] = 'checked=checked'; }
    else                    { $data['shorturls'] = ''; }

    $data['items_per_page'] = xarModGetVar('gallery', 'items_per_page');
    $data['cols_per_page'] = xarModGetVar('gallery', 'cols_per_page');
    $data['file_path'] = xarModGetVar('gallery', 'file_path');
    $data['module_alias'] = xarModGetVar('gallery', 'module_alias');
    $data['sort'] = xarModGetVar('gallery', 'sort');
    $data['sort_order'] = xarModGetVar('gallery', 'sort_order');

    $data['new_album_success'] = xarModGetVar('gallery', 'new_album_success');
    $data['new_file_success'] = xarModGetVar('gallery', 'new_file_success');

    $data['authid'] = xarSecGenAuthKey();

    $hooks = xarModCallHooks('module', 'modifyconfig', 'gallery',
        array('module'   => 'gallery', 'itemtype' => 1)
    );
    if( empty($hooks) ) {
        $data['hooks'] = array();
    } else {
        $data['hooks'] = $hooks;
    }

    // Return the output that has been generated by this function
    return $data;
}
?>
