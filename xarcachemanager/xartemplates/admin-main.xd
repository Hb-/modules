<div class="xar-mod-head"><span class="xar-mod-title"><xar:mlstring>Administration - xarCacheManager</xar:mlstring></span></div>
<div class="xar-mod-body">
    <h2><xar:mlstring>Overview</xar:mlstring></h2>
    <div style="padding: 1px;" class="xar-norm-outline">
        <div style="float:right;padding:10px;">
            <xar:if condition="file_exists('modules/xarcachemanager/xarimages/admin.gif')" >
                <img src="modules/xarcachemanager/xarimages/admin.gif" alt="official icon" width="96" height="96" />
            <xar:else />
                <img src="modules/xarcachemanager/xarimages/admin_generic.gif" alt="official icon" width="96" height="96" />
            </xar:if>
        </div>
        <div class="xar-mod-title xar-norm-outline" style="margin-top: 1em; margin-left: 1em; margin-right: 1em; width: auto; border-style: none none dotted none;">
            <xar:mlstring>What is it?</xar:mlstring>
        </div>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <p><xar:mlstring>The xarCacheManager module provides an admin user interface to control the settings of the xarCache system of Xaraya.  It also provides hooks that allow the cache system to know when changes have happened to modules so that it can respond accordingly (event based cache expiration/invalidation).</xar:mlstring></p>
        </div>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <p><xar:mlstring>The output cache system is designed to reduce the amount of work a server system has to do under heavy load conditions.  It saves the output used by Xaraya so that it does not need to go through the entire process to reproduce the same output over and over again.  At this point, only page level output caching for anonymous users is available.  In time, the output cache system will also support page and module level output caching for all users, as well as more efficient caching of page output for anonymous users.  Page level output caching for certain user groups will also be available for sites that can take advantage of this.</xar:mlstring></p>
        </div>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <p><xar:mlstring>Please do not confuse output caching with Xaraya's variable or template caching systems.  Each are different.  In time, they will likely use the same caching infrastructure, but will still provide different caching for different purposes.  For more on the different points of caching in Xaraya, please refer to:</xar:mlstring></p>
        </div>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <a href="http://xaraya.com/~jsb/cachingPoints.html">http://xaraya.com/~jsb/cachingPoints.html</a>
        </div>
        <br />
        <div class="xar-mod-title xar-norm-outline" style="margin-top: 1em; margin-left: 1em; margin-right: 1em; width: auto; border-style: none none dotted none;">
            <xar:mlstring>How to use it?</xar:mlstring>
        </div>
        <br />
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <xar:mlstring>
                The xarCacheManager module has several tools for managing the xarCache system and your cached output files.  The tools are organized under the following menu links: 
            </xar:mlstring>
            <ul>
                <li><xar:mlstring>Flush Cache - allows you to flush (delete) the output cache of specific Cache Keys.  Cache Keys are define by module, type, and function.</xar:mlstring></li>
                <li><xar:mlstring>Modify Config - allows you to set the values for the output cache system.</xar:mlstring></li>
            </ul>
        </div>
        <br />
        <div class="xar-mod-title xar-norm-outline" style="margin-top: 1em; margin-left: 1em; margin-right: 1em; width: auto; border-style: none none dotted none;">
            <xar:mlstring>Included Blocks</xar:mlstring>
        </div>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <p><xar:mlstring>The xarCacheManager Module has no blocks included at this time.</xar:mlstring></p>
        </div>
        <br />
        <div class="xar-mod-title xar-norm-outline" style="margin-top: 1em; margin-left: 1em; margin-right: 1em; width: auto; border-style: none none dotted none;">
            <xar:mlstring>Included Hooks</xar:mlstring>
        </div>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <p><xar:mlstring>The xarCacheManager module provides create, update, and delete API hooks.  To activate these hooks, go to Admin panel -> Modules -> Configure Hooks and click on the xarcachemanager link.  Select the modules you would like to enable the xarCacheManager hook functionality for (articles, categories, autolinks, blocks, html are the most likely candidates) and click the Save Changes button.  Once hooked to xarCacheManager, when you create, update, or delete items of the module, the call to the xarCacheManager hooks will flush the appropriate cache to insure that your changes will be instantly available on your site (not masked by cached output files).</xar:mlstring></p>
        </div>
        <br />
        <div class="xar-mod-title xar-norm-outline" style="margin-top: 1em; margin-left: 1em; margin-right: 1em; width: auto; border-style: none none dotted none;">
            <xar:mlstring>Additional Information</xar:mlstring>
        </div>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <p><xar:mlstring>Please note that page level output caching is not appropriate for sites that require the serving of dynamic content to anonymous users.  Example: if each page contains data that changes ever second and must be presented to the anonymous viewer in the latest state, you do not want to use page level output caching.  However, if it is acceptable to present the data with changes no older than 1 minute, you can enable page level output caching and set the Cache Expiration Time to 60 seconds.  If your site serves the same page 100 times per minute this will measurably reduce the load on your systems to do so.</xar:mlstring></p>
        </div>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <p><xar:mlstring>Page level output caching may also affect the expected behavior of certain aspects of Xaraya as cached pages are served without loading the modules.  Example:  the stats and opentracker modules will not accurately reflect the total number of page views your site receives because they are not invoked when serving cached pages.  If your site is under heavy load that needs to be reduced, you may want to consider doing your site statistic tracking via the web server log files or a javascript based solution like that implemented by Hitbox anyway.  Either of these methods will accurately work with page level caching enabled.</xar:mlstring></p>
        </div>
        <br />
        <div class="xar-mod-title xar-norm-outline" style="margin-top: 1em; margin-left: 1em; margin-right: 1em; width: auto; border-style: none none dotted none;">
            <xar:mlstring>TODO List</xar:mlstring>
        </div>
        <br />
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <xar:mlstring>
                General output caching related: 
            </xar:mlstring>
            <ul>
                <li><xar:mlstring>Support multisite configurations.</xar:mlstring></li>
                <li><xar:mlstring>Refactor to use more robust, unified caching infrastructure - potential third party candidates: PEAR/cache, jpcache.</xar:mlstring></li>
            </ul>
        </div>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <xar:mlstring>
                Page level output caching related: 
            </xar:mlstring>
            <ul>
                <li><xar:mlstring>Support itemtype in cache key.</xar:mlstring></li>
                <li><xar:mlstring>Provide Scheduler, getfile/link integration for pre-population of output cache.</xar:mlstring></li>
                <li><xar:mlstring>Provide getfile/link regeneration of heavily requested files.</xar:mlstring></li>
                <li><xar:mlstring>Provide option of serving cached pages to anonymous users before loading xarCore.</xar:mlstring></li>
            </ul>
        </div>
        <div style="margin-left: 1em; margin-right: 1em; text-align:left;">
            <xar:mlstring>
                Block/module level output caching related: 
            </xar:mlstring>
            <ul>
                <li><xar:mlstring>Add block/function awareness in xarCache, distinguishing between blocks, functions, and pages when appropriate.</xar:mlstring></li>
                <li><xar:mlstring>Add xar[Block?]*Cached() calls in xarModFunc() and xarBlocks_renderGroup().</xar:mlstring></li>
            </ul>
        </div>
        <br />
        <div class="xar-norm-outline xar-accent" style="text-align: center; padding: 0.5em 1em 0.5em 1em; margin-top: 5px;">
            <xar:mlstring>Extended information about this module can be found here. [modules module]</xar:mlstring>
        </div>
    </div>
</div>